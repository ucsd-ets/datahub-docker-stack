apiVersion: k8s.nginx.org/v1
kind: VirtualServer
metadata:
  name: {{ .Values.vs.name }}
  namespace: {{ .Values.namespace }}
  annotations:
  {{- include "test-server-chart.virtual-server.annotations" . | nindent 4 }}
spec:
  # Use the following template for each new gRPC service added. Remember to add an upstream.
  # split_clients $request_id $<UNIQUE ID> {
  #     100% vs_test-server_tester-server_gpu-tester;
  #   }
  http-snippets: |
    split_clients $request_id $gpu_test {
      100% vs_test-server_tester-server_gpu-tester;
    }
  host: {{ .Values.vs.host}}
  tls:
    secret: {{ .Values.vs.secret }}
  upstreams:
  - name: {{ .Values.vs.upstream.gpu.name }}
    service: {{ .Values.vs.upstream.gpu.service }}
    port: {{ .Values.vs.upstream.gpu.port }}
  # use the following template for each new gRPC service added. Replace <URL>
  # with the url the gRPC calls. Replace <UNIQUE ID> with an identifier for http-snippets.
  # location <URL> {
  #     grpc_connect_timeout 300s;
  #     grpc_read_timeout 300s;
  #     grpc_send_timeout 300s;
  #     grpc_set_header Host $host;
  #     grpc_set_header X-Real-IP $remote_addr;
  #     grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #     grpc_set_header X-Forwarded-Host $host;
  #     grpc_set_header X-Forwarded-Port $server_port;
  #     grpc_set_header X-Forwarded-Proto $scheme;

  #     grpc_pass grpc://$<UNIQUE ID>;
  #   }
  server-snippets: |
    location /gpu_tester.GpuTester/LaunchGpuJob {
      grpc_connect_timeout 300s;
      grpc_read_timeout 300s;
      grpc_send_timeout 300s;
      grpc_set_header Host $host;
      grpc_set_header X-Real-IP $remote_addr;
      grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      grpc_set_header X-Forwarded-Host $host;
      grpc_set_header X-Forwarded-Port $server_port;
      grpc_set_header X-Forwarded-Proto $scheme;

      grpc_pass grpc://$gpu_test;
    }

    error_page 400 @grpcerror400;
    error_page 401 @grpcerror401;
    error_page 403 @grpcerror403;
    error_page 404 @grpcerror404;
    error_page 405 @grpcerror405;
    error_page 408 @grpcerror408;
    error_page 414 @grpcerror414;
    error_page 426 @grpcerror426;
    error_page 500 @grpcerror500;
    error_page 501 @grpcerror501;
    error_page 502 @grpcerror502;
    error_page 503 @grpcerror503;
    error_page 504 @grpcerror504;


    location @grpcerror400 { default_type application/grpc; return 400 "\n"; }
    location @grpcerror401 { default_type application/grpc; return 401 "\n"; }
    location @grpcerror403 { default_type application/grpc; return 403 "\n"; }
    location @grpcerror404 { default_type application/grpc; return 404 "\n"; }
    location @grpcerror405 { default_type application/grpc; return 405 "\n"; }
    location @grpcerror408 { default_type application/grpc; return 408 "\n"; }
    location @grpcerror414 { default_type application/grpc; return 414 "\n"; }
    location @grpcerror426 { default_type application/grpc; return 426 "\n"; }
    location @grpcerror500 { default_type application/grpc; return 500 "\n"; }
    location @grpcerror501 { default_type application/grpc; return 501 "\n"; }
    location @grpcerror502 { default_type application/grpc; return 502 "\n"; }
    location @grpcerror503 { default_type application/grpc; return 503 "\n"; }
    location @grpcerror504 { default_type application/grpc; return 504 "\n"; }

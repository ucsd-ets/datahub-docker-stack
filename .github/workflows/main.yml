name: Docker

env:
  DOCKER_CLIENT_TIMEOUT: "300"

on:
  push:
    branches: [ main, refractor_buildtest ]
    paths:
      - "images/**"
      - "model/**"
      - "scripts/**"
      - "dodo.py"
      - ".github/workflows/main.yml"

  pull_request:
    branches: [ main ]
    paths:
      - "images/**"
      - "model/**"
      - "scripts/**"
      - "dodo.py"
      - ".github/workflows/main.yml"

  workflow_dispatch:

jobs:
  docker-pipeline:
    runs-on: ubuntu-latest
    if: >
      !contains(github.event.head_commit.message , 'skip ci') &&
      !contains(github.event.pull_request.title, 'skip ci')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Install pip dependencies
        run: |
          docker image prune -a -f
          docker container prune -f

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt
      
      - name: Install selenium dependecies for r studio
        env:
          CHROMEDRIVER_VERSION: ${{ secrets.CHROMEDRIVER_VERSION }}
        run: |
          chmod +x ./scripts/selenium_setup.sh 
          ./scripts/selenium_setup.sh $CHROMEDRIVER_VERSION
          
      - name: Install pydoit fixed
        run: |
          git clone https://github.com/davidzyx/doit
          pip install ./doit
          rm -rf ./doit

      - name: Set Python-specific environment variables
        run: |
          echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV
          echo "PYTHONUNBUFFERED=TRUE" >> $GITHUB_ENV
      
      - name: Setup artifacts
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          
        run: |
          doit prep

      # - name: Workflow tests
      #   env:
      #     DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      #     DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
      #   run: |
      #     coverage run -m pytest -v tests/test_docker_unit.py
      #     coverage report

      - name: Clone Wiki
        uses: actions/checkout@v2
        with:
          repository: ${{github.repository}}.wiki
          path: wiki

      - name: Build stack
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          GRPC_CERT: ${{ secrets.GRPC_CERT }}
          PREPUSH_IMAGES: '["ucsdets/scipy-ml-notebook"]'
        run: |
          python3 scripts/v2/main.py
      #   used for building, prepushing, testing and pushing module

      # - name: Run manifests
      #   env:
      #     DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      #     DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
      #   run: |
      #     ls manifests/*.md &> /dev/null && cp manifests/*.md wiki/ && echo "*.md copied to wiki" || echo "no *.md"
      # # if there is no image updated, skip doit
      # # if there is no *.md (no image updated), skip cp command

      - name: Push Wiki to GitHub
        if: >
          !contains(github.base_ref , 'test') &&
          !contains(github.base_ref , 'dev') &&
          !contains(github.event.head_commit.message , 'skip push') &&
          (
            github.ref == 'refs/heads/master' || 
            github.ref == 'refs/heads/main'
          )
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "[ci skip] Automated publish for ${{github.sha}}"
          repository: wiki/

      - name: Archive artifacts and logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: |
            artifacts
            logs
            manifests
            wiki
